name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
      IMAGE_NAME: ${{ secrets.DOCKER_IMAGE_NAME }}
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          set -e
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt -r dev-requirements.txt

      - name: Lint code (ruff)
        run: |
          set -e
          source .venv/bin/activate
          ruff check app tests

      - name: Run tests
        run: |
          set -e
          source .venv/bin/activate
          pytest --cov=app --cov-report=term-missing --cov-report=html tests/unit tests/integration

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: htmlcov
          path: htmlcov/

      - name: Build Docker image
        run: |
          set -e
          docker build -t $REGISTRY/$IMAGE_NAME:$IMAGE_TAG .

      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          set -e
          docker push $REGISTRY/$IMAGE_NAME:$IMAGE_TAG
